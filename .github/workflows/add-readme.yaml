name: Add README to Repository using Groq

on:
  workflow_run:
    workflows: ["Terraform Workflow"]  # Trigger this after the Terraform workflow
    types:
      - completed

jobs:
  add-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GitHub Token for Authentication
        run: echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Get Terraform Outputs
        id: terraform_outputs
        run: |
          # Retrieve outputs from the Terraform workflow (repository name and description)
          echo "REPO_NAME=$(terraform output -raw repository_name)" >> $GITHUB_ENV
          echo "REPO_DESCRIPTION=$(terraform output -raw repository_description)" >> $GITHUB_ENV

      - name: Generate README content using Groq
        id: generate_readme
        run: |
          # Generate the prompt dynamically based on repository name and description
          curl -X POST https://api.groq.com/openai/v1/chat/completions \
          -H "Authorization: Bearer ${{ secrets.GROQ}}" \
          -H "Content-Type: application/json" \
          -d '{
                "model": "llama-3.3-70b-versatile",
                "messages": [{
                    "role": "user",
                    "content": "Generate a README file for a repository with the name: '${{ env.REPO_NAME }}' and description: '${{ env.REPO_DESCRIPTION }}.'"
                }]
              }' > generated_readme.json
          
          # Extract the generated README content from the Groq response
          README_CONTENT=$(jq -r '.choices[0].message.content' generated_readme.json)

          # Create the README.md file with the extracted content
          echo "$README_CONTENT" > README.md

      - name: Create or Update README.md in the repository
        run: |
          # Push the generated README file to the GitHub repository
          git add README.md
          git commit -m "Add README generated by Groq"
          git push origin main
