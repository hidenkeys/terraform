name: Terraform Workflow

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the 'main' branch
  workflow_dispatch:  # Optional: for manual testing

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.5'  # Specify the version of Terraform

      - name: Terraform Format Check
        run: terraform fmt -check  # Ensure that the Terraform code is formatted properly

      - name: Terraform Validate
        run: terraform validate  # Validate the Terraform configuration

      - name: Cache Terraform providers
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf', '**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Set up GitHub token as environment variable
        run: echo "TOKEN=${{ secrets.TOKEN }}" >> $GITHUB_ENV  # Use your custom token stored as 'TOKEN'

      - name: Terraform Init
        run: terraform init
        working-directory: terraform  # Specify the directory containing the .tf files

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform  # Specify the directory containing the .tf files

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: terraform  # Specify the directory containing the .tf files
        env:
          TOKEN: ${{ secrets.TOKEN }}  # Pass your custom PAT to the provider
